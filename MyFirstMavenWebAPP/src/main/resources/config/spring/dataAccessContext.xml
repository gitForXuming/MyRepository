<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    
           http://www.springframework.org/schema/context    
           http://www.springframework.org/schema/context/spring-context-3.0.xsd  
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
           http://www.springframework.org/schema/aop    
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd    
           ">
           
    <!--  -->       
	<context:component-scan base-package="com" >
	   	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>        
    
	<!-- 本地数据库连接池 -->
	 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@163.1.9.119:1521:ebank" />
 		<property name="username" value="ebankbak" />
 		<property name="password" value="ebankbak" />

	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/model/mapper/*.xml"></property>
    </bean>  
    
    
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.db" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>
  
   <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean> 
	
	
     <!-- 拦截器方式配置事物 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRES_NEW"  rollback-for="java.lang.Exception" />
            <tx:method name="append*" propagation="REQUIRES_NEW"  rollback-for="java.lang.Exception" />
            <tx:method name="insert*" propagation="REQUIRED"  rollback-for="java.lang.Exception" />
            <tx:method name="save*" propagation="REQUIRED"  rollback-for="java.lang.Exception" />
            <tx:method name="update*" propagation="REQUIRED"  rollback-for="java.lang.Exception" />
            <tx:method name="modify*" propagation="REQUIRED"  rollback-for="java.lang.Exception" />
            <tx:method name="edit*" propagation="REQUIRED"  rollback-for="java.lang.Exception" />
            <tx:method name="delete*" propagation="REQUIRED"  rollback-for="java.lang.Exception" />
            <tx:method name="remove*" propagation="REQUIRED"  rollback-for="java.lang.Exception" />
            
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.service.*.*(..))" />
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
    </aop:config> 
   
    <!-- 开启事务注解驱动 -->  
    <tx:annotation-driven transaction-manager="transactionManager" />  
    
</beans>